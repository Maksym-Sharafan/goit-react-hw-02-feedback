{"version":3,"sources":["components/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","App.js","index.js"],"names":["Notification","message","Statistics","this","props","good","neutral","bad","total","positivePercentage","Component","FeedbackOptions","options","onLeaveFeedback","map","key","type","onClick","name","shortid","generate","Section","title","children","App","state","e","currentTarget","setState","countTotalFeedback","Object","values","reduce","item","acc","countPositiveFeedbackPercentage","percent","Math","round","isNaN","objectKeys","keys","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAIeA,EAJM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,6BAAKA,KCwBMC,E,4JArBX,WACI,MAA0DC,KAAKC,MAAvDC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,mBAEnC,OACiB,IAAZD,IACI,cAAC,EAAD,CAAcP,QAAQ,sBACtB,qCACG,4CACA,+BACI,uCAAUI,EAAV,OACA,0CAAaC,EAAb,OACA,sCAASC,EAAT,OACA,wCAAWC,IAAX,OACA,oDAAuBC,IAAvB,kB,GAdCC,a,iBCoBVC,E,4JAnBX,WACI,MAAqCR,KAAKC,MAAlCQ,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,gBACjB,OAEI,8BACKD,EAAQE,KAAI,SAAAC,GAAG,OACZ,wBAEIC,KAAK,SACLC,QAASJ,EACTK,KAAMH,EAJV,SAKEA,GAJOI,IAAQC,qB,GARPV,aCYfW,E,4JAXX,WACI,MAA4BlB,KAAKC,MAAzBkB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACf,OACI,oCACI,6BAAKD,IACJC,S,GANKb,aCoDPc,E,4MAhDXC,MAAQ,CACJpB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAITM,gBAAkB,SAACa,GACf,IAAQR,EAASQ,EAAEC,cAAXT,KACR,EAAKU,SAAL,eAAgBV,EAAM,EAAKO,MAAMP,GAAM,K,EAG3CW,mBAAqB,WAEjB,OADoBC,OAAOC,OAAO,EAAKN,OACpBO,QAAO,SAACC,EAAMC,GAC7B,OAAOA,EAAMD,IACd,I,EAGPE,gCAAkC,WAC9B,IAAM3B,EAAQ,EAAKqB,qBACbO,EAAUC,KAAKC,MAAM,EAAKb,MAAMpB,KAAOG,EAAQ,KACrD,OAAI+B,MAAMH,GAAiB,EACpBA,G,4CAIX,WACE,MAA+BjC,KAAKsB,MAA5BpB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACfiC,EAAaV,OAAOW,KAAKtC,KAAKsB,OAEtC,OACE,eAAC,EAAD,CAASH,MAAM,wBAAf,UAEE,cAAC,EAAD,CAAiBV,QAAS4B,EAAY3B,gBAAiBV,KAAKU,kBAE5D,cAAC,EAAD,CACER,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOL,KAAK0B,mBACZpB,mBAAoBN,KAAKgC,yC,GA1CnBzB,aCAlBgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fd1b9cc5.chunk.js","sourcesContent":["const Notification = ({ message }) => (\r\n    <h2>{message}</h2>\r\n);\r\n\r\nexport default Notification;","import { Component } from \"react\";\r\nimport Notification from \"../Notification\";\r\n\r\nclass Statistics extends Component{\r\n    render() {\r\n        const { good, neutral, bad, total, positivePercentage } = this.props;\r\n        \r\n        return (\r\n            (total() === 0 ?\r\n                (<Notification message=\"No feedback given\"/>) :\r\n                (<>\r\n                    <h2>Statistics</h2>\r\n                    <ul>\r\n                        <li>Good:{good} </li>\r\n                        <li>Neutral:{neutral} </li>\r\n                        <li>Bad:{bad} </li>\r\n                        <li>Total:{total()} </li>\r\n                        <li>Positive feedback:{positivePercentage()}% </li>\r\n                    </ul>\r\n                </>)\r\n            )\r\n        );\r\n    };\r\n};\r\n\r\nexport default Statistics;","import { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\n\r\nclass FeedbackOptions extends Component{\r\n    render() {\r\n        const { options, onLeaveFeedback } = this.props;\r\n        return (\r\n            \r\n            <div>\r\n                {options.map(key => (\r\n                    <button\r\n                        key={shortid.generate()}\r\n                        type=\"button\"\r\n                        onClick={onLeaveFeedback}\r\n                        name={key}\r\n                    >{key}</button>\r\n                ))}\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default FeedbackOptions;","import { Component } from \"react\";\r\n\r\n\r\nclass Section extends Component {\r\n    render() {\r\n        const { title, children } = this.props;\r\n        return (\r\n            <section>\r\n                <h2>{title}</h2>\r\n                {children}\r\n            </section>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Section;","import { Component } from \"react\";\n\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions'\nimport Section from './components/Section'\n\nclass App extends Component{\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0,\n    };\n\n\n    onLeaveFeedback = (e) => {\n        const { name } = e.currentTarget;\n        this.setState({[name]:this.state[name]+1})\n    }\n\n    countTotalFeedback = () => {\n        const arrayValues = Object.values(this.state);\n        return arrayValues.reduce((item, acc) => {\n            return acc + item\n        }, 0);\n    }\n\n    countPositiveFeedbackPercentage = () => {\n        const total = this.countTotalFeedback();\n        const percent = Math.round(this.state.good / total * 100);\n        if (isNaN(percent)) return 0;\n        return percent;\n    }\n    \n\n    render() {\n      const { good, neutral, bad } = this.state;\n        const objectKeys = Object.keys(this.state);\n        \n      return (\n        <Section title=\"Please leave feedback\">\n          \n          <FeedbackOptions options={objectKeys} onLeaveFeedback={this.onLeaveFeedback} />\n\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback}\n            positivePercentage={this.countPositiveFeedbackPercentage}\n          />\n        </Section>\n      );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}