{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Notification","message","className","Statistics","this","props","good","neutral","bad","total","positivePercentage","styles","statistics__title","statistics__list","statistics__item","span__statistic","statistics__total","statistics__percent","Component","FeedbackOptions","options","onLeaveFeedback","button__wrapper","map","key","button__feedback","type","onClick","name","shortid","generate","Section","title","children","App","state","e","currentTarget","setState","countTotalFeedback","Object","values","reduce","item","acc","countPositiveFeedbackPercentage","percent","Math","round","isNaN","objectKeys","keys","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,iBAAmB,qCAAqC,iBAAmB,qCAAqC,kBAAoB,sCAAsC,oBAAsB,wCAAwC,kBAAoB,sCAAsC,gBAAkB,sC,oJCGvTC,EAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,oBAAIC,UAAU,eAAd,SAA+BD,K,gBCwBtDE,E,4JApBb,WACE,MAA0DC,KAAKC,MAAvDC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,mBAEnC,OAAmB,IAAZD,IACL,cAAC,EAAD,CAAcR,QAAQ,sBAEtB,qCACE,oBAAIC,UAAWS,IAAOC,kBAAtB,wBACA,qBAAIV,UAAWS,IAAOE,iBAAtB,UACE,qBAAIX,UAAWS,IAAOG,iBAAtB,kBAA8C,sBAAMZ,UAAWS,IAAOI,gBAAxB,SAA2CT,OACzF,qBAAIJ,UAAWS,IAAOG,iBAAtB,qBAAiD,sBAAMZ,UAAWS,IAAOI,gBAAxB,SAA2CR,OAC5F,qBAAIL,UAAWS,IAAOG,iBAAtB,iBAA6C,sBAAMZ,UAAWS,IAAOI,gBAAxB,SAA2CP,OACxF,qBAAIN,UAAWS,IAAOK,kBAAtB,mBAAgD,sBAAMd,UAAWS,IAAOI,gBAAxB,SAA2CN,SAC3F,qBAAIP,UAAWS,IAAOM,oBAAtB,+BAA8D,sBAAMf,UAAWS,IAAOI,gBAAxB,SAA2CL,MAAzG,iB,GAdeQ,a,iCCqBVC,E,4JApBb,WACE,MAAqCf,KAAKC,MAAlCe,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,gBACjB,OACE,qBAAKnB,UAAWS,IAAOW,gBAAvB,SACGF,EAAQG,KAAI,SAAAC,GAAG,OACd,wBACEtB,UAAWS,IAAOc,iBAElBC,KAAK,SACLC,QAASN,EACTO,KAAMJ,EALR,SAOGA,GALIK,IAAQC,qB,GARKZ,aCWfa,E,4JAXb,WACE,MAA4B3B,KAAKC,MAAzB2B,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACf,OACE,0BAAS/B,UAAU,eAAnB,UACE,oBAAIA,UAAU,aAAd,SAA4B8B,IAC3BC,S,GANaf,aCoDPgB,E,4MAhDbC,MAAQ,CACN7B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPa,gBAAkB,SAAAe,GAChB,IAAQR,EAASQ,EAAEC,cAAXT,KACR,EAAKU,SAAL,eAAiBV,EAAO,EAAKO,MAAMP,GAAQ,K,EAG7CW,mBAAqB,WAEnB,OADoBC,OAAOC,OAAO,EAAKN,OACpBO,QAAO,SAACC,EAAMC,GAC/B,OAAOA,EAAMD,IACZ,I,EAGLE,gCAAkC,WAChC,IAAMpC,EAAQ,EAAK8B,qBACbO,EAAUC,KAAKC,MAAO,EAAKb,MAAM7B,KAAOG,EAAS,KACvD,OAAIwC,MAAMH,GAAiB,EACpBA,G,4CAGT,WACE,MAA+B1C,KAAK+B,MAA5B7B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjB0C,EAAaV,OAAOW,KAAK/C,KAAK+B,OAEpC,OACE,eAAC,EAAD,CAAUH,MAAM,wBAAhB,UACE,cAAC,EAAD,CACEZ,QAAS8B,EACT7B,gBAAiBjB,KAAKiB,kBAGxB,cAAC,EAAD,CACEf,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOL,KAAKmC,mBACZ7B,mBAAoBN,KAAKyC,yC,GA1CjB3B,aCFlBkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1B1D,EAAOC,QAAU,CAAC,iBAAmB,6C","file":"static/js/main.5cca269b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics__list\":\"Statistics_statistics__list__1RdRw\",\"statistics__item\":\"Statistics_statistics__item__y_orm\",\"statistics__total\":\"Statistics_statistics__total__3GkZL\",\"statistics__percent\":\"Statistics_statistics__percent__DzAHR\",\"statistics__title\":\"Statistics_statistics__title__12ge0\",\"span__statistic\":\"Statistics_span__statistic__-zh7R\"};","import '../../baseStyle.css';\n\nconst Notification = ({ message }) => <h2 className=\"notification\" >{message}</h2>;\n\nexport default Notification;\n","import { Component } from 'react';\nimport Notification from '../Notification';\n\nimport styles from './Statistics.module.css';\n\nclass Statistics extends Component {\n  render() {\n    const { good, neutral, bad, total, positivePercentage } = this.props;\n\n    return total() === 0 ? (\n      <Notification message=\"No feedback given\" />\n    ) : (\n      <>\n        <h2 className={styles.statistics__title}>Statistics</h2>\n        <ul className={styles.statistics__list}>\n          <li className={styles.statistics__item} >Good:<span className={styles.span__statistic} >{good}</span></li>\n          <li className={styles.statistics__item} >Neutral:<span className={styles.span__statistic} >{neutral}</span></li>\n          <li className={styles.statistics__item} >Bad:<span className={styles.span__statistic} >{bad}</span></li>\n          <li className={styles.statistics__total} >Total:<span className={styles.span__statistic} >{total()}</span></li>\n          <li className={styles.statistics__percent} >Positive feedback:<span className={styles.span__statistic} >{positivePercentage()}</span>%</li>\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default Statistics;\n","import { Component } from 'react';\nimport shortid from 'shortid';\n\nimport styles from './FeedbackOptions.module.css';\n\nclass FeedbackOptions extends Component {\n  render() {\n    const { options, onLeaveFeedback } = this.props;\n    return (\n      <div className={styles.button__wrapper} >\n        {options.map(key => (\n          <button\n            className={styles.button__feedback}\n            key={shortid.generate()}\n            type=\"button\"\n            onClick={onLeaveFeedback}\n            name={key}\n          >\n            {key}\n          </button>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default FeedbackOptions;\n","import { Component } from 'react';\n\nimport '../../baseStyle.css';\n\nclass Section extends Component {\n  render() {\n    const { title, children } = this.props;\n    return (\n      <section className=\"main_section\">\n        <h2 className=\"main_title\">{title}</h2>\n        {children}\n      </section>\n    );\n  }\n}\n\nexport default Section;\n","import { Component } from 'react';\n\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\n\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = e => {\n    const { name } = e.currentTarget;\n    this.setState({ [name]: this.state[name] + 1 });\n  };\n\n  countTotalFeedback = () => {\n    const arrayValues = Object.values(this.state);\n    return arrayValues.reduce((item, acc) => {\n      return acc + item;\n    }, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n    const percent = Math.round((this.state.good / total) * 100);\n    if (isNaN(percent)) return 0;\n    return percent;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const objectKeys = Object.keys(this.state);\n\n    return (\n      <Section  title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={objectKeys}\n          onLeaveFeedback={this.onLeaveFeedback}\n        />\n\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={this.countTotalFeedback}\n          positivePercentage={this.countPositiveFeedbackPercentage}\n        />\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button__feedback\":\"FeedbackOptions_button__feedback__1yN32\"};"],"sourceRoot":""}